{"ast":null,"code":"export default {\n  name: 'Breadcrumb',\n  data() {\n    return {\n      pathItems: [] // This should be populated based on current route\n    };\n  },\n  watch: {\n    $route: {\n      handler(route) {\n        this.generateBreadcrumbs(route);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    generateBreadcrumbs(route) {\n      // A simple example, you might need more sophisticated logic\n      let matched = route.matched.filter(item => item.meta && item.meta.title);\n      const first = matched[0];\n      if (first && first.name !== 'Dashboard') {// Assuming 'Dashboard' is your homepage under '/'\n        // this.pathItems = [{ path: '/', name: '首页' }, ...matched.map(item => ({ name: item.meta.title, path: item.path }))];\n      } else {\n        // this.pathItems = matched.map(item => ({ name: item.meta.title, path: item.path }));\n      }\n      // Placeholder logic - replace with actual breadcrumb generation\n      this.pathItems = route.matched.filter(item => item.meta && item.meta.title).map(item => ({\n        name: item.meta.title,\n        path: item.path\n      }));\n      if (this.pathItems.length > 0 && this.pathItems[0].name !== '首页' && route.path !== '/') {\n        this.pathItems.unshift({\n          name: '首页',\n          path: '/'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","pathItems","watch","$route","handler","route","generateBreadcrumbs","immediate","methods","matched","filter","item","meta","title","first","map","path","length","unshift"],"sources":["src/components/Breadcrumb.vue"],"sourcesContent":["<template>\n  <div class=\"breadcrumb-container\">\n    <!-- TODO: Implement breadcrumb logic, e.g., using vue-router's matched routes -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item v-for=\"item in pathItems\" :key=\"item.path\" :to=\"item.path ? { path: item.path } : null\">\n        {{ item.name }}\n      </el-breadcrumb-item>\n    </el-breadcrumb>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Breadcrumb',\n  data() {\n    return {\n      pathItems: [] // This should be populated based on current route\n    };\n  },\n  watch: {\n    $route: {\n      handler(route) {\n        this.generateBreadcrumbs(route);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    generateBreadcrumbs(route) {\n      // A simple example, you might need more sophisticated logic\n      let matched = route.matched.filter(item => item.meta && item.meta.title);\n      const first = matched[0];\n      if (first && first.name !== 'Dashboard') { // Assuming 'Dashboard' is your homepage under '/'\n         // this.pathItems = [{ path: '/', name: '首页' }, ...matched.map(item => ({ name: item.meta.title, path: item.path }))];\n      } else {\n        // this.pathItems = matched.map(item => ({ name: item.meta.title, path: item.path }));\n      }\n      // Placeholder logic - replace with actual breadcrumb generation\n      this.pathItems = route.matched\n        .filter(item => item.meta && item.meta.title)\n        .map(item => ({\n          name: item.meta.title,\n          path: item.path,\n        }));\n      if (this.pathItems.length > 0 && this.pathItems[0].name !== '首页' && route.path !== '/') {\n        this.pathItems.unshift({ name: '首页', path: '/' });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.breadcrumb-container {\n  padding: 15px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #e0e0e0;\n}\n</style> "],"mappings":"AAaA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,KAAA;IACAC,MAAA;MACAC,QAAAC,KAAA;QACA,KAAAC,mBAAA,CAAAD,KAAA;MACA;MACAE,SAAA;IACA;EACA;EACAC,OAAA;IACAF,oBAAAD,KAAA;MACA;MACA,IAAAI,OAAA,GAAAJ,KAAA,CAAAI,OAAA,CAAAC,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA,IAAAD,IAAA,CAAAC,IAAA,CAAAC,KAAA;MACA,MAAAC,KAAA,GAAAL,OAAA;MACA,IAAAK,KAAA,IAAAA,KAAA,CAAAf,IAAA;QACA;MAAA,CACA;QACA;MAAA;MAEA;MACA,KAAAE,SAAA,GAAAI,KAAA,CAAAI,OAAA,CACAC,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA,IAAAD,IAAA,CAAAC,IAAA,CAAAC,KAAA,EACAE,GAAA,CAAAJ,IAAA;QACAZ,IAAA,EAAAY,IAAA,CAAAC,IAAA,CAAAC,KAAA;QACAG,IAAA,EAAAL,IAAA,CAAAK;MACA;MACA,SAAAf,SAAA,CAAAgB,MAAA,aAAAhB,SAAA,IAAAF,IAAA,aAAAM,KAAA,CAAAW,IAAA;QACA,KAAAf,SAAA,CAAAiB,OAAA;UAAAnB,IAAA;UAAAiB,IAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}