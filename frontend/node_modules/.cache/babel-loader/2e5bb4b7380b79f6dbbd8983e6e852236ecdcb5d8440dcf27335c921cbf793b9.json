{"ast":null,"code":"// TODO: Import API service for BOMs\nexport default {\n  name: 'BomList',\n  data() {\n    return {\n      boms: [] // Populate with API data\n    };\n  },\n  created() {\n    this.fetchBoms();\n  },\n  methods: {\n    fetchBoms() {\n      // TODO: Call API to get BOMs\n      // Example data:\n      this.boms = [{\n        bom_id: 1,\n        product_name: '示例产品A',\n        product_id: 1,\n        bom_version: 'V1.0',\n        bom_status: 1,\n        created_at: '2023-01-01'\n      }, {\n        bom_id: 2,\n        product_name: '示例产品B',\n        product_id: 2,\n        bom_version: 'V1.1',\n        bom_status: 0,\n        created_at: '2023-01-05'\n      }];\n    },\n    handleAddBom() {\n      this.$router.push({\n        name: 'CreateBOM'\n      }); // Use CreateBOM route name\n    },\n    handleView(row) {\n      console.log('View BOM:', row);\n      this.$router.push({\n        name: 'EditBOM',\n        params: {\n          id: row.bom_id\n        },\n        query: {\n          view: 'true'\n        }\n      }); // Use EditBOM for view, with query param\n    },\n    handleEdit(row) {\n      console.log('Edit BOM in BomList:', row); // Add log for debugging\n      this.$router.push({\n        name: 'EditBOM',\n        params: {\n          id: row.bom_id\n        }\n      }); // Use EditBOM route name\n    },\n    handleDelete(row) {\n      console.log('Delete BOM:', row);\n      this.$confirm('此操作将永久删除该BOM, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","boms","created","fetchBoms","methods","bom_id","product_name","product_id","bom_version","bom_status","created_at","handleAddBom","$router","push","handleView","row","console","log","params","id","query","view","handleEdit","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then","$message","message","catch"],"sources":["src/views/bom/BomList.vue"],"sourcesContent":["<template>\n  <div class=\"bom-list-container\">\n    <h2>BOM列表</h2>\n    <el-button type=\"primary\" @click=\"handleAddBom\" style=\"margin-bottom: 20px;\">新增BOM</el-button>\n    <el-table :data=\"boms\" border style=\"width: 100%\">\n      <el-table-column prop=\"product_name\" label=\"成品名称\"></el-table-column>\n      <el-table-column prop=\"bom_version\" label=\"BOM版本\"></el-table-column>\n      <el-table-column prop=\"bom_status\" label=\"状态\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.bom_status === 1 ? 'success' : 'danger'\">\n            {{ scope.row.bom_status === 1 ? '启用' : '禁用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" label=\"创建日期\"></el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleView(scope.row)\">查看</el-button>\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- TODO: Add pagination -->\n  </div>\n</template>\n\n<script>\n// TODO: Import API service for BOMs\nexport default {\n  name: 'BomList',\n  data() {\n    return {\n      boms: [] // Populate with API data\n    };\n  },\n  created() {\n    this.fetchBoms();\n  },\n  methods: {\n    fetchBoms() {\n      // TODO: Call API to get BOMs\n      // Example data:\n      this.boms = [\n        { bom_id: 1, product_name: '示例产品A', product_id: 1, bom_version: 'V1.0', bom_status: 1, created_at: '2023-01-01' },\n        { bom_id: 2, product_name: '示例产品B', product_id: 2, bom_version: 'V1.1', bom_status: 0, created_at: '2023-01-05' },\n      ];\n    },\n    handleAddBom() {\n      this.$router.push({ name: 'CreateBOM' }); // Use CreateBOM route name\n    },\n    handleView(row) {\n      console.log('View BOM:', row);\n      this.$router.push({ name: 'EditBOM', params: { id: row.bom_id }, query: { view: 'true' } }); // Use EditBOM for view, with query param\n    },\n    handleEdit(row) {\n      console.log('Edit BOM in BomList:', row); // Add log for debugging\n      this.$router.push({ name: 'EditBOM', params: { id: row.bom_id } }); // Use EditBOM route name\n    },\n    handleDelete(row) {\n      console.log('Delete BOM:', row);\n        this.$confirm('此操作将永久删除该BOM, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({ type: 'success', message: '删除成功!'});\n      }).catch(() => {\n        this.$message({ type: 'info', message: '已取消删除' });\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.bom-list-container {\n  padding: 20px;\n}\n</style> "],"mappings":"AA4BA;AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA;MACA;MACA,KAAAF,IAAA,IACA;QAAAI,MAAA;QAAAC,YAAA;QAAAC,UAAA;QAAAC,WAAA;QAAAC,UAAA;QAAAC,UAAA;MAAA,GACA;QAAAL,MAAA;QAAAC,YAAA;QAAAC,UAAA;QAAAC,WAAA;QAAAC,UAAA;QAAAC,UAAA;MAAA,EACA;IACA;IACAC,aAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAd,IAAA;MAAA;IACA;IACAe,WAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,cAAAF,GAAA;MACA,KAAAH,OAAA,CAAAC,IAAA;QAAAd,IAAA;QAAAmB,MAAA;UAAAC,EAAA,EAAAJ,GAAA,CAAAV;QAAA;QAAAe,KAAA;UAAAC,IAAA;QAAA;MAAA;IACA;IACAC,WAAAP,GAAA;MACAC,OAAA,CAAAC,GAAA,yBAAAF,GAAA;MACA,KAAAH,OAAA,CAAAC,IAAA;QAAAd,IAAA;QAAAmB,MAAA;UAAAC,EAAA,EAAAJ,GAAA,CAAAV;QAAA;MAAA;IACA;IACAkB,aAAAR,GAAA;MACAC,OAAA,CAAAC,GAAA,gBAAAF,GAAA;MACA,KAAAS,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA,KAAAC,QAAA;UAAAF,IAAA;UAAAG,OAAA;QAAA;MACA,GAAAC,KAAA;QACA,KAAAF,QAAA;UAAAF,IAAA;UAAAG,OAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}