{"ast":null,"code":"// TODO: Import API service for components\nexport default {\n  name: 'ComponentList',\n  data() {\n    return {\n      components: [] // Populate with API data\n    };\n  },\n  created() {\n    this.fetchComponents();\n  },\n  methods: {\n    fetchComponents() {\n      // TODO: Call API to get components\n      // Example data:\n      this.components = [{\n        component_id: 1,\n        component_code: 'C001',\n        component_name: '示例配件X',\n        component_spec: '规格A',\n        component_category: '原料',\n        component_price: 10,\n        min_stock: 50,\n        component_status: 1\n      }, {\n        component_id: 2,\n        component_code: 'C002',\n        component_name: '示例配件Y',\n        component_spec: '规格B',\n        component_category: '辅料',\n        component_price: 5,\n        min_stock: 100,\n        component_status: 1\n      }];\n    },\n    handleAddComponent() {\n      // TODO: Navigate to component form or open dialog\n      console.log('Navigate to add component form');\n    },\n    handleEdit(row) {\n      // TODO: Navigate to component form with row.component_id or open dialog\n      console.log('Edit component:', row);\n    },\n    handleDelete(row) {\n      // TODO: Confirm and call API to delete component\n      console.log('Delete component:', row);\n      this.$confirm('此操作将永久删除该配件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","components","created","fetchComponents","methods","component_id","component_code","component_name","component_spec","component_category","component_price","min_stock","component_status","handleAddComponent","console","log","handleEdit","row","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then","$message","message","catch"],"sources":["src/views/component/ComponentList.vue"],"sourcesContent":["<template>\n  <div class=\"component-list-container\">\n    <h2>配件列表</h2>\n    <el-button type=\"primary\" @click=\"handleAddComponent\" style=\"margin-bottom: 20px;\">新增配件</el-button>\n    <el-table :data=\"components\" border style=\"width: 100%\">\n      <el-table-column prop=\"component_code\" label=\"配件编码\"></el-table-column>\n      <el-table-column prop=\"component_name\" label=\"配件名称\"></el-table-column>\n      <el-table-column prop=\"component_spec\" label=\"规格\"></el-table-column>\n      <el-table-column prop=\"component_category\" label=\"类别\"></el-table-column>\n      <el-table-column prop=\"component_price\" label=\"采购价\"></el-table-column>\n      <el-table-column prop=\"min_stock\" label=\"最小库存\"></el-table-column>\n      <el-table-column prop=\"component_status\" label=\"状态\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.component_status === 1 ? 'success' : 'danger'\">\n            {{ scope.row.component_status === 1 ? '启用' : '禁用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- TODO: Add pagination -->\n  </div>\n</template>\n\n<script>\n// TODO: Import API service for components\nexport default {\n  name: 'ComponentList',\n  data() {\n    return {\n      components: [] // Populate with API data\n    };\n  },\n  created() {\n    this.fetchComponents();\n  },\n  methods: {\n    fetchComponents() {\n      // TODO: Call API to get components\n      // Example data:\n      this.components = [\n        { component_id: 1, component_code: 'C001', component_name: '示例配件X', component_spec: '规格A', component_category: '原料', component_price: 10, min_stock:50, component_status: 1 },\n        { component_id: 2, component_code: 'C002', component_name: '示例配件Y', component_spec: '规格B', component_category: '辅料', component_price: 5, min_stock:100, component_status: 1 },\n      ];\n    },\n    handleAddComponent() {\n      // TODO: Navigate to component form or open dialog\n      console.log('Navigate to add component form');\n    },\n    handleEdit(row) {\n      // TODO: Navigate to component form with row.component_id or open dialog\n      console.log('Edit component:', row);\n    },\n    handleDelete(row) {\n      // TODO: Confirm and call API to delete component\n      console.log('Delete component:', row);\n      this.$confirm('此操作将永久删除该配件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({ type: 'success', message: '删除成功!'});\n      }).catch(() => {\n        this.$message({ type: 'info', message: '已取消删除' });\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.component-list-container {\n  padding: 20px;\n}\n</style> "],"mappings":"AA8BA;AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,gBAAA;MACA;MACA;MACA,KAAAF,UAAA,IACA;QAAAI,YAAA;QAAAC,cAAA;QAAAC,cAAA;QAAAC,cAAA;QAAAC,kBAAA;QAAAC,eAAA;QAAAC,SAAA;QAAAC,gBAAA;MAAA,GACA;QAAAP,YAAA;QAAAC,cAAA;QAAAC,cAAA;QAAAC,cAAA;QAAAC,kBAAA;QAAAC,eAAA;QAAAC,SAAA;QAAAC,gBAAA;MAAA,EACA;IACA;IACAC,mBAAA;MACA;MACAC,OAAA,CAAAC,GAAA;IACA;IACAC,WAAAC,GAAA;MACA;MACAH,OAAA,CAAAC,GAAA,oBAAAE,GAAA;IACA;IACAC,aAAAD,GAAA;MACA;MACAH,OAAA,CAAAC,GAAA,sBAAAE,GAAA;MACA,KAAAE,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA,KAAAC,QAAA;UAAAF,IAAA;UAAAG,OAAA;QAAA;MACA,GAAAC,KAAA;QACA,KAAAF,QAAA;UAAAF,IAAA;UAAAG,OAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}