{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapState(['loading'])\n  },\n  methods: {\n    ...mapActions(['login']),\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          try {\n            const loginResponse = await this.login(this.loginForm);\n            console.log('Login action response in component:', loginResponse);\n            console.log('Token in Vuex after login action:', this.$store.state.token);\n            console.log('User in Vuex after login action:', this.$store.state.user);\n            if (this.$store.state.token) {\n              this.$router.push('/');\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error('登录似乎成功，但未能获取到Token，请检查控制台。');\n              console.error('Token is still missing in Vuex state after login action.');\n            }\n          } catch (error) {\n            console.error('登录流程失败:', error);\n            const errorMessage = error.response?.data?.message || error.message || '未知登录错误';\n            this.$message.error('登录失败: ' + errorMessage);\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","name","data","loginForm","username","password","loginRules","required","message","trigger","computed","methods","handleLogin","$refs","validate","valid","loginResponse","login","console","log","$store","state","token","user","$router","push","$message","success","error","errorMessage","response"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-form-container\">\n      <div class=\"login-header\">\n        <h2>翔珑科技ERP系统</h2>\n        <p>企业资源管理平台</p>\n      </div>\n      \n      <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginForm\" class=\"login-form\">\n        <el-form-item prop=\"username\">\n          <el-input \n            v-model=\"loginForm.username\" \n            prefix-icon=\"el-icon-user\" \n            placeholder=\"用户名\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item prop=\"password\">\n          <el-input \n            v-model=\"loginForm.password\" \n            prefix-icon=\"el-icon-lock\" \n            type=\"password\" \n            placeholder=\"密码\"\n            @keyup.enter.native=\"handleLogin\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button \n            :loading=\"loading\" \n            type=\"primary\" \n            class=\"login-button\" \n            @click=\"handleLogin\">\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapState(['loading'])\n  },\n  methods: {\n    ...mapActions(['login']),\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          try {\n            const loginResponse = await this.login(this.loginForm);\n            console.log('Login action response in component:', loginResponse);\n            console.log('Token in Vuex after login action:', this.$store.state.token);\n            console.log('User in Vuex after login action:', this.$store.state.user);\n\n            if (this.$store.state.token) {\n              this.$router.push('/');\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error('登录似乎成功，但未能获取到Token，请检查控制台。');\n              console.error('Token is still missing in Vuex state after login action.');\n            }\n          } catch (error) {\n            console.error('登录流程失败:', error);\n            const errorMessage = error.response?.data?.message || error.message || '未知登录错误';\n            this.$message.error('登录失败: ' + errorMessage);\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f0f2f5;\n  background-image: url('../assets/login-bg.jpg');\n  background-size: cover;\n  background-position: center;\n}\n\n.login-form-container {\n  width: 400px;\n  padding: 40px;\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header h2 {\n  font-size: 24px;\n  color: #303133;\n  margin-bottom: 10px;\n}\n\n.login-header p {\n  font-size: 14px;\n  color: #606266;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n\n.login-button {\n  width: 100%;\n}\n</style>\n"],"mappings":"AA0CA,SAAAA,QAAA,EAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,QAAA;IACA,GAAAX,QAAA;EACA;EACAY,OAAA;IACA,GAAAX,UAAA;IACAY,YAAA;MACA,KAAAC,KAAA,CAAAV,SAAA,CAAAW,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA,MAAAC,aAAA,cAAAC,KAAA,MAAAd,SAAA;YACAe,OAAA,CAAAC,GAAA,wCAAAH,aAAA;YACAE,OAAA,CAAAC,GAAA,2CAAAC,MAAA,CAAAC,KAAA,CAAAC,KAAA;YACAJ,OAAA,CAAAC,GAAA,0CAAAC,MAAA,CAAAC,KAAA,CAAAE,IAAA;YAEA,SAAAH,MAAA,CAAAC,KAAA,CAAAC,KAAA;cACA,KAAAE,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA;cACAV,OAAA,CAAAU,KAAA;YACA;UACA,SAAAA,KAAA;YACAV,OAAA,CAAAU,KAAA,YAAAA,KAAA;YACA,MAAAC,YAAA,GAAAD,KAAA,CAAAE,QAAA,EAAA5B,IAAA,EAAAM,OAAA,IAAAoB,KAAA,CAAApB,OAAA;YACA,KAAAkB,QAAA,CAAAE,KAAA,YAAAC,YAAA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}