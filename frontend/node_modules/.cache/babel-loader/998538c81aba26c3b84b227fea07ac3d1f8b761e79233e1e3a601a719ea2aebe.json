{"ast":null,"code":"export default {\n  name: 'TransactionList',\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchTransactions();\n  },\n  methods: {\n    fetchTransactions() {\n      // TODO: API Call\n      this.transactions = [{\n        transaction_id: 1,\n        transaction_no: 'TRN2023001',\n        transaction_type: 1,\n        transaction_date: '2023-01-20',\n        reference_no: 'PO2023001',\n        warehouse_name: '主仓库',\n        created_by: 'admin',\n        transaction_status: 1\n      }, {\n        transaction_id: 2,\n        transaction_no: 'TRN2023002',\n        transaction_type: 2,\n        transaction_date: '2023-02-01',\n        reference_no: 'SO2023001',\n        warehouse_name: '主仓库',\n        created_by: 'admin',\n        transaction_status: 1\n      }];\n    },\n    getTransactionTypeText(type) {\n      const typeMap = {\n        1: '采购入库',\n        2: '销售出库',\n        3: '生产领料',\n        4: '成品入库',\n        5: '库存调整',\n        6: '盘点调整'\n      };\n      return typeMap[type] || '未知类型';\n    },\n    handleView(row) {\n      // TODO: Navigate to a transaction detail view or show a dialog with items\n      console.log('View transaction details:', row);\n    }\n    // TODO: Add methods to navigate to StockInForm, StockOutForm, AdjustmentForm\n  }\n};","map":{"version":3,"names":["name","data","transactions","created","fetchTransactions","methods","transaction_id","transaction_no","transaction_type","transaction_date","reference_no","warehouse_name","created_by","transaction_status","getTransactionTypeText","type","typeMap","handleView","row","console","log"],"sources":["src/views/inventory/TransactionList.vue"],"sourcesContent":["<template>\n  <div class=\"transaction-list-container\">\n    <h2>库存事务列表</h2>\n    <!-- TODO: Add filters, and buttons for new transactions (StockIn, StockOut, Adjustment) -->\n    <el-table :data=\"transactions\" border style=\"width: 100%\">\n      <el-table-column prop=\"transaction_no\" label=\"事务编号\"></el-table-column>\n      <el-table-column prop=\"transaction_type\" label=\"事务类型\">\n        <template slot-scope=\"scope\">\n          {{ getTransactionTypeText(scope.row.transaction_type) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"transaction_date\" label=\"事务日期\"></el-table-column>\n      <el-table-column prop=\"reference_no\" label=\"参考单号\"></el-table-column>\n      <el-table-column prop=\"warehouse_name\" label=\"仓库\"></el-table-column>\n      <el-table-column prop=\"created_by\" label=\"创建人\"></el-table-column>\n      <el-table-column prop=\"transaction_status\" label=\"状态\">\n         <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.transaction_status === 1 ? 'success' : 'info'\">\n            {{ scope.row.transaction_status === 1 ? '已确认' : '草稿' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleView(scope.row)\">查看详情</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TransactionList',\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchTransactions();\n  },\n  methods: {\n    fetchTransactions() {\n      // TODO: API Call\n      this.transactions = [\n        { transaction_id: 1, transaction_no: 'TRN2023001', transaction_type: 1, transaction_date: '2023-01-20', reference_no: 'PO2023001', warehouse_name: '主仓库', created_by: 'admin', transaction_status: 1},\n        { transaction_id: 2, transaction_no: 'TRN2023002', transaction_type: 2, transaction_date: '2023-02-01', reference_no: 'SO2023001', warehouse_name: '主仓库', created_by: 'admin', transaction_status: 1}\n      ];\n    },\n    getTransactionTypeText(type) {\n      const typeMap = { 1: '采购入库', 2: '销售出库', 3: '生产领料', 4: '成品入库', 5: '库存调整', 6: '盘点调整' };\n      return typeMap[type] || '未知类型';\n    },\n    handleView(row) {\n      // TODO: Navigate to a transaction detail view or show a dialog with items\n      console.log('View transaction details:', row);\n    }\n    // TODO: Add methods to navigate to StockInForm, StockOutForm, AdjustmentForm\n  }\n};\n</script>\n\n<style scoped>\n.transaction-list-container {\n  padding: 20px;\n}\n</style> "],"mappings":"AAgCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACAD,kBAAA;MACA;MACA,KAAAF,YAAA,IACA;QAAAI,cAAA;QAAAC,cAAA;QAAAC,gBAAA;QAAAC,gBAAA;QAAAC,YAAA;QAAAC,cAAA;QAAAC,UAAA;QAAAC,kBAAA;MAAA,GACA;QAAAP,cAAA;QAAAC,cAAA;QAAAC,gBAAA;QAAAC,gBAAA;QAAAC,YAAA;QAAAC,cAAA;QAAAC,UAAA;QAAAC,kBAAA;MAAA,EACA;IACA;IACAC,uBAAAC,IAAA;MACA,MAAAC,OAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;MACA,OAAAA,OAAA,CAAAD,IAAA;IACA;IACAE,WAAAC,GAAA;MACA;MACAC,OAAA,CAAAC,GAAA,8BAAAF,GAAA;IACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}