{"ast":null,"code":"export default {\n  name: 'SalesOrderList',\n  data() {\n    return {\n      orders: []\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      // TODO: API call\n      this.orders = [{\n        sales_order_id: 1,\n        order_no: 'SO2023001',\n        customer_name: '客户甲',\n        order_date: '2023-01-10',\n        delivery_date: '2023-02-01',\n        total_amount: 5000,\n        order_status: 1\n      }, {\n        sales_order_id: 2,\n        order_no: 'SO2023002',\n        customer_name: '客户乙',\n        order_date: '2023-01-15',\n        delivery_date: '2023-02-10',\n        total_amount: 12000,\n        order_status: 3\n      }];\n    },\n    getStatusText(status) {\n      const statusMap = {\n        0: '草稿',\n        1: '确认',\n        2: '部分发货',\n        3: '全部发货',\n        4: '完成',\n        5: '取消'\n      };\n      return statusMap[status] || '未知';\n    },\n    handleAddOrder() {\n      this.$router.push({\n        name: 'SalesOrderForm',\n        params: {\n          id: 'new'\n        }\n      });\n    },\n    handleView(row) {\n      this.$router.push({\n        name: 'SalesOrderDetail',\n        params: {\n          id: row.sales_order_id\n        }\n      });\n    },\n    handleEdit(row) {\n      this.$router.push({\n        name: 'SalesOrderForm',\n        params: {\n          id: row.sales_order_id\n        }\n      });\n    },\n    handleDelete(row) {\n      console.log('Delete sales order', row);\n      this.$confirm('确认删除此销售订单吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        /* TODO: API call */this.$message.success('删除成功');\n        this.fetchOrders();\n      }).catch(() => this.$message.info('已取消删除'));\n    }\n  }\n};","map":{"version":3,"names":["name","data","orders","created","fetchOrders","methods","sales_order_id","order_no","customer_name","order_date","delivery_date","total_amount","order_status","getStatusText","status","statusMap","handleAddOrder","$router","push","params","id","handleView","row","handleEdit","handleDelete","console","log","$confirm","type","then","$message","success","catch","info"],"sources":["src/views/sales/SalesOrderList.vue"],"sourcesContent":["<template>\n  <div class=\"sales-order-list-container\">\n    <h2>销售订单列表</h2>\n    <el-button type=\"primary\" @click=\"handleAddOrder\" style=\"margin-bottom: 20px;\">新增销售订单</el-button>\n    <el-table :data=\"orders\" border style=\"width: 100%\">\n      <el-table-column prop=\"order_no\" label=\"订单编号\"></el-table-column>\n      <el-table-column prop=\"customer_name\" label=\"客户名称\"></el-table-column>\n      <el-table-column prop=\"order_date\" label=\"订单日期\"></el-table-column>\n      <el-table-column prop=\"delivery_date\" label=\"交付日期\"></el-table-column>\n      <el-table-column prop=\"total_amount\" label=\"总金额\"></el-table-column>\n      <el-table-column prop=\"order_status\" label=\"订单状态\">\n        <template slot-scope=\"scope\">\n          <!-- TODO: Map status codes to text -->\n          <el-tag>{{ getStatusText(scope.row.order_status) }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleView(scope.row)\">查看</el-button>\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\" :disabled=\"scope.row.order_status > 1\">编辑</el-button> <!-- Example: Disable edit after confirm -->\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\" :disabled=\"scope.row.order_status > 1\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SalesOrderList',\n  data() {\n    return {\n      orders: []\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      // TODO: API call\n      this.orders = [\n        { sales_order_id: 1, order_no: 'SO2023001', customer_name: '客户甲', order_date: '2023-01-10', delivery_date: '2023-02-01', total_amount: 5000, order_status: 1 },\n        { sales_order_id: 2, order_no: 'SO2023002', customer_name: '客户乙', order_date: '2023-01-15', delivery_date: '2023-02-10', total_amount: 12000, order_status: 3 },\n      ];\n    },\n    getStatusText(status) {\n      const statusMap = { 0: '草稿', 1: '确认', 2: '部分发货', 3: '全部发货', 4: '完成', 5: '取消' };\n      return statusMap[status] || '未知';\n    },\n    handleAddOrder() {\n      this.$router.push({ name: 'SalesOrderForm', params: { id: 'new' } });\n    },\n    handleView(row) {\n      this.$router.push({ name: 'SalesOrderDetail', params: { id: row.sales_order_id } });\n    },\n    handleEdit(row) {\n      this.$router.push({ name: 'SalesOrderForm', params: { id: row.sales_order_id } });\n    },\n    handleDelete(row) {\n      console.log('Delete sales order', row);\n      this.$confirm('确认删除此销售订单吗?', '提示', { type: 'warning' })\n        .then(() => { /* TODO: API call */ this.$message.success('删除成功'); this.fetchOrders(); })\n        .catch(() => this.$message.info('已取消删除'));\n    }\n  }\n};\n</script>\n\n<style scoped>\n.sales-order-list-container {\n  padding: 20px;\n}\n</style> "],"mappings":"AA4BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACA;MACA,KAAAF,MAAA,IACA;QAAAI,cAAA;QAAAC,QAAA;QAAAC,aAAA;QAAAC,UAAA;QAAAC,aAAA;QAAAC,YAAA;QAAAC,YAAA;MAAA,GACA;QAAAN,cAAA;QAAAC,QAAA;QAAAC,aAAA;QAAAC,UAAA;QAAAC,aAAA;QAAAC,YAAA;QAAAC,YAAA;MAAA,EACA;IACA;IACAC,cAAAC,MAAA;MACA,MAAAC,SAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;MACA,OAAAA,SAAA,CAAAD,MAAA;IACA;IACAE,eAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAlB,IAAA;QAAAmB,MAAA;UAAAC,EAAA;QAAA;MAAA;IACA;IACAC,WAAAC,GAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;QAAAlB,IAAA;QAAAmB,MAAA;UAAAC,EAAA,EAAAE,GAAA,CAAAhB;QAAA;MAAA;IACA;IACAiB,WAAAD,GAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;QAAAlB,IAAA;QAAAmB,MAAA;UAAAC,EAAA,EAAAE,GAAA,CAAAhB;QAAA;MAAA;IACA;IACAkB,aAAAF,GAAA;MACAG,OAAA,CAAAC,GAAA,uBAAAJ,GAAA;MACA,KAAAK,QAAA;QAAAC,IAAA;MAAA,GACAC,IAAA;QAAA,yBAAAC,QAAA,CAAAC,OAAA;QAAA,KAAA3B,WAAA;MAAA,GACA4B,KAAA,YAAAF,QAAA,CAAAG,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}