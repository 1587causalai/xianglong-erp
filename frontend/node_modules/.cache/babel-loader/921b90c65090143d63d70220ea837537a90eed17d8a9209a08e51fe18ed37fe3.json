{"ast":null,"code":"// TODO: Import API service for products\nexport default {\n  name: 'ProductList',\n  data() {\n    return {\n      products: [] // Populate with API data\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      // TODO: Call API to get products\n      // Example data:\n      this.products = [{\n        product_id: 1,\n        product_code: 'P001',\n        product_name: '示例产品A',\n        product_spec: '型号X',\n        product_category: '类别1',\n        product_price: 100,\n        product_status: 1\n      }, {\n        product_id: 2,\n        product_code: 'P002',\n        product_name: '示例产品B',\n        product_spec: '型号Y',\n        product_category: '类别2',\n        product_price: 150,\n        product_status: 0\n      }];\n    },\n    handleAddProduct() {\n      // TODO: Navigate to product form or open dialog\n      console.log('Navigate to add product form');\n    },\n    handleEdit(row) {\n      // TODO: Navigate to product form with row.product_id or open dialog\n      console.log('Edit product:', row);\n    },\n    handleDelete(row) {\n      // TODO: Confirm and call API to delete product\n      console.log('Delete product:', row);\n      this.$confirm('此操作将永久删除该产品, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // Call delete API\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","products","created","fetchProducts","methods","product_id","product_code","product_name","product_spec","product_category","product_price","product_status","handleAddProduct","console","log","handleEdit","row","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then","$message","message","catch"],"sources":["src/views/product/ProductList.vue"],"sourcesContent":["<template>\n  <div class=\"product-list-container\">\n    <h2>产品列表</h2>\n    <!-- TODO: Add search, filter, add button -->\n    <el-button type=\"primary\" @click=\"handleAddProduct\" style=\"margin-bottom: 20px;\">新增产品</el-button>\n    <el-table :data=\"products\" border style=\"width: 100%\">\n      <el-table-column prop=\"product_code\" label=\"产品编码\"></el-table-column>\n      <el-table-column prop=\"product_name\" label=\"产品名称\"></el-table-column>\n      <el-table-column prop=\"product_spec\" label=\"规格\"></el-table-column>\n      <el-table-column prop=\"product_category\" label=\"类别\"></el-table-column>\n      <el-table-column prop=\"product_price\" label=\"售价\"></el-table-column>\n      <el-table-column prop=\"product_status\" label=\"状态\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.product_status === 1 ? 'success' : 'danger'\">\n            {{ scope.row.product_status === 1 ? '启用' : '禁用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- TODO: Add pagination -->\n  </div>\n</template>\n\n<script>\n// TODO: Import API service for products\nexport default {\n  name: 'ProductList',\n  data() {\n    return {\n      products: [] // Populate with API data\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      // TODO: Call API to get products\n      // Example data:\n      this.products = [\n        { product_id: 1, product_code: 'P001', product_name: '示例产品A', product_spec: '型号X', product_category: '类别1', product_price: 100, product_status: 1 },\n        { product_id: 2, product_code: 'P002', product_name: '示例产品B', product_spec: '型号Y', product_category: '类别2', product_price: 150, product_status: 0 },\n      ];\n    },\n    handleAddProduct() {\n      // TODO: Navigate to product form or open dialog\n      console.log('Navigate to add product form');\n    },\n    handleEdit(row) {\n      // TODO: Navigate to product form with row.product_id or open dialog\n      console.log('Edit product:', row);\n    },\n    handleDelete(row) {\n      // TODO: Confirm and call API to delete product\n      console.log('Delete product:', row);\n      this.$confirm('此操作将永久删除该产品, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // Call delete API\n        this.$message({ type: 'success', message: '删除成功!'});\n      }).catch(() => {\n        this.$message({ type: 'info', message: '已取消删除' });\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.product-list-container {\n  padding: 20px;\n}\n</style> "],"mappings":"AA8BA;AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACA;MACA;MACA,KAAAF,QAAA,IACA;QAAAI,UAAA;QAAAC,YAAA;QAAAC,YAAA;QAAAC,YAAA;QAAAC,gBAAA;QAAAC,aAAA;QAAAC,cAAA;MAAA,GACA;QAAAN,UAAA;QAAAC,YAAA;QAAAC,YAAA;QAAAC,YAAA;QAAAC,gBAAA;QAAAC,aAAA;QAAAC,cAAA;MAAA,EACA;IACA;IACAC,iBAAA;MACA;MACAC,OAAA,CAAAC,GAAA;IACA;IACAC,WAAAC,GAAA;MACA;MACAH,OAAA,CAAAC,GAAA,kBAAAE,GAAA;IACA;IACAC,aAAAD,GAAA;MACA;MACAH,OAAA,CAAAC,GAAA,oBAAAE,GAAA;MACA,KAAAE,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA;QACA,KAAAC,QAAA;UAAAF,IAAA;UAAAG,OAAA;QAAA;MACA,GAAAC,KAAA;QACA,KAAAF,QAAA;UAAAF,IAAA;UAAAG,OAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}