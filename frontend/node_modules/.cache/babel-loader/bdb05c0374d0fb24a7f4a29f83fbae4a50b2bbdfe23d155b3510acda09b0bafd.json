{"ast":null,"code":"// TODO: Import API service for BOMs, products, components\nexport default {\n  name: 'BomForm',\n  data() {\n    return {\n      isEditMode: false,\n      isViewMode: false,\n      bomForm: {\n        product_id: null,\n        bom_version: '',\n        bom_status: 1,\n        bom_remark: '',\n        details: []\n      }\n      // TODO: rules for validation\n    };\n  },\n  created() {\n    const bomId = this.$route.params.id;\n    this.isViewMode = this.$route.query.view === 'true';\n    if (bomId && bomId !== 'new') {\n      this.isEditMode = true;\n      this.fetchBomDetails(bomId);\n    } else {\n      this.isEditMode = false;\n      // Add a default empty item for new BOM\n      if (!this.isViewMode) this.addDetailItem();\n    }\n  },\n  methods: {\n    fetchBomDetails(bomId) {\n      // TODO: Call API to get BOM details by bomId\n      console.log('Fetch BOM details for:', bomId);\n      // Example data structure:\n      this.bomForm = {\n        bom_id: bomId,\n        product_id: '1',\n        // Example product ID\n        bom_version: 'V1.0',\n        bom_status: 1,\n        bom_remark: '这是一个示例BOM',\n        details: [{\n          bom_detail_id: 1,\n          component_id: '1',\n          quantity: 2,\n          bom_detail_remark: '主要部件'\n        }, {\n          bom_detail_id: 2,\n          component_id: '2',\n          quantity: 5,\n          bom_detail_remark: '辅助材料'\n        }]\n      };\n    },\n    addDetailItem() {\n      this.bomForm.details.push({\n        component_id: null,\n        quantity: 1,\n        bom_detail_remark: ''\n        // temp_id for local key if needed before saving: Date.now()\n      });\n    },\n    removeDetailItem(index) {\n      this.bomForm.details.splice(index, 1);\n    },\n    submitForm() {\n      this.$refs.bomFormRef.validate(valid => {\n        if (valid) {\n          // TODO: Call API to save/update BOM\n          console.log('Submitting BOM:', this.bomForm);\n          this.$message.success('BOM保存成功!');\n          this.goBack();\n        } else {\n          this.$message.error('请检查表单输入!');\n          return false;\n        }\n      });\n    },\n    goBack() {\n      this.$router.push({\n        name: 'BomList'\n      }); // Assuming your list route is named BomList\n    }\n  }\n};","map":{"version":3,"names":["name","data","isEditMode","isViewMode","bomForm","product_id","bom_version","bom_status","bom_remark","details","created","bomId","$route","params","id","query","view","fetchBomDetails","addDetailItem","methods","console","log","bom_id","bom_detail_id","component_id","quantity","bom_detail_remark","push","removeDetailItem","index","splice","submitForm","$refs","bomFormRef","validate","valid","$message","success","goBack","error","$router"],"sources":["src/views/bom/BomForm.vue"],"sourcesContent":["<template>\n  <div class=\"bom-form-container\">\n    <h2>{{ isEditMode ? '编辑BOM' : (isViewMode ? '查看BOM' : '新增BOM') }}</h2>\n    <el-form :model=\"bomForm\" ref=\"bomFormRef\" label-width=\"120px\" :disabled=\"isViewMode\">\n      <el-form-item label=\"成品\" prop=\"product_id\">\n        <!-- TODO: Use a searchable select for products -->\n        <el-select v-model=\"bomForm.product_id\" placeholder=\"请选择成品\">\n          <el-option label=\"示例产品A (P001)\" value=\"1\"></el-option>\n          <el-option label=\"示例产品B (P002)\" value=\"2\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"BOM版本\" prop=\"bom_version\">\n        <el-input v-model=\"bomForm.bom_version\" placeholder=\"例如：V1.0\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"bom_status\">\n        <el-switch v-model=\"bomForm.bom_status\" :active-value=\"1\" :inactive-value=\"0\" active-text=\"启用\" inactive-text=\"禁用\"></el-switch>\n      </el-form-item>\n      <el-form-item label=\"备注\" prop=\"bom_remark\">\n        <el-input type=\"textarea\" v-model=\"bomForm.bom_remark\"></el-input>\n      </el-form-item>\n\n      <h3>BOM明细</h3>\n      <el-table :data=\"bomForm.details\" border style=\"margin-bottom: 20px;\">\n        <el-table-column label=\"配件编码\">\n          <template slot-scope=\"scope\">\n            <!-- TODO: Searchable select for components -->\n            <el-select v-model=\"scope.row.component_id\" placeholder=\"选择配件\" :disabled=\"isViewMode\">\n               <el-option label=\"示例配件X (C001)\" value=\"1\"></el-option>\n               <el-option label=\"示例配件Y (C002)\" value=\"2\"></el-option>\n            </el-select>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"用量\">\n          <template slot-scope=\"scope\">\n            <el-input-number v-model=\"scope.row.quantity\" :min=\"0.001\" :precision=\"3\" :disabled=\"isViewMode\"></el-input-number>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"备注\">\n          <template slot-scope=\"scope\">\n            <el-input v-model=\"scope.row.bom_detail_remark\" :disabled=\"isViewMode\"></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" v-if=\"!isViewMode\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"danger\" @click=\"removeDetailItem(scope.$index)\">移除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-button type=\"primary\" @click=\"addDetailItem\" v-if=\"!isViewMode\">添加明细项</el-button>\n\n      <el-form-item style=\"margin-top: 20px;\" v-if=\"!isViewMode\">\n        <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n        <el-button @click=\"goBack\">取消</el-button>\n      </el-form-item>\n      <el-form-item style=\"margin-top: 20px;\" v-if=\"isViewMode\">\n        <el-button @click=\"goBack\">返回</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n// TODO: Import API service for BOMs, products, components\nexport default {\n  name: 'BomForm',\n  data() {\n    return {\n      isEditMode: false,\n      isViewMode: false,\n      bomForm: {\n        product_id: null,\n        bom_version: '',\n        bom_status: 1,\n        bom_remark: '',\n        details: []\n      },\n      // TODO: rules for validation\n    };\n  },\n  created() {\n    const bomId = this.$route.params.id;\n    this.isViewMode = this.$route.query.view === 'true';\n    if (bomId && bomId !== 'new') {\n      this.isEditMode = true;\n      this.fetchBomDetails(bomId);\n    } else {\n      this.isEditMode = false;\n      // Add a default empty item for new BOM\n      if (!this.isViewMode) this.addDetailItem(); \n    }\n  },\n  methods: {\n    fetchBomDetails(bomId) {\n      // TODO: Call API to get BOM details by bomId\n      console.log('Fetch BOM details for:', bomId);\n      // Example data structure:\n      this.bomForm = {\n        bom_id: bomId,\n        product_id: '1', // Example product ID\n        bom_version: 'V1.0',\n        bom_status: 1,\n        bom_remark: '这是一个示例BOM',\n        details: [\n          { bom_detail_id: 1, component_id: '1', quantity: 2, bom_detail_remark: '主要部件' },\n          { bom_detail_id: 2, component_id: '2', quantity: 5, bom_detail_remark: '辅助材料' },\n        ]\n      };\n    },\n    addDetailItem() {\n      this.bomForm.details.push({\n        component_id: null,\n        quantity: 1,\n        bom_detail_remark: ''\n        // temp_id for local key if needed before saving: Date.now()\n      });\n    },\n    removeDetailItem(index) {\n      this.bomForm.details.splice(index, 1);\n    },\n    submitForm() {\n      this.$refs.bomFormRef.validate(valid => {\n        if (valid) {\n          // TODO: Call API to save/update BOM\n          console.log('Submitting BOM:', this.bomForm);\n          this.$message.success('BOM保存成功!');\n          this.goBack();\n        } else {\n          this.$message.error('请检查表单输入!');\n          return false;\n        }\n      });\n    },\n    goBack() {\n      this.$router.push({ name: 'BomList' }); // Assuming your list route is named BomList\n    }\n  }\n};\n</script>\n\n<style scoped>\n.bom-form-container {\n  padding: 20px;\n}\n</style> "],"mappings":"AA8DA;AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,UAAA;MACAC,OAAA;QACAC,UAAA;QACAC,WAAA;QACAC,UAAA;QACAC,UAAA;QACAC,OAAA;MACA;MACA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,KAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,KAAAX,UAAA,QAAAS,MAAA,CAAAG,KAAA,CAAAC,IAAA;IACA,IAAAL,KAAA,IAAAA,KAAA;MACA,KAAAT,UAAA;MACA,KAAAe,eAAA,CAAAN,KAAA;IACA;MACA,KAAAT,UAAA;MACA;MACA,UAAAC,UAAA,OAAAe,aAAA;IACA;EACA;EACAC,OAAA;IACAF,gBAAAN,KAAA;MACA;MACAS,OAAA,CAAAC,GAAA,2BAAAV,KAAA;MACA;MACA,KAAAP,OAAA;QACAkB,MAAA,EAAAX,KAAA;QACAN,UAAA;QAAA;QACAC,WAAA;QACAC,UAAA;QACAC,UAAA;QACAC,OAAA,GACA;UAAAc,aAAA;UAAAC,YAAA;UAAAC,QAAA;UAAAC,iBAAA;QAAA,GACA;UAAAH,aAAA;UAAAC,YAAA;UAAAC,QAAA;UAAAC,iBAAA;QAAA;MAEA;IACA;IACAR,cAAA;MACA,KAAAd,OAAA,CAAAK,OAAA,CAAAkB,IAAA;QACAH,YAAA;QACAC,QAAA;QACAC,iBAAA;QACA;MACA;IACA;IACAE,iBAAAC,KAAA;MACA,KAAAzB,OAAA,CAAAK,OAAA,CAAAqB,MAAA,CAAAD,KAAA;IACA;IACAE,WAAA;MACA,KAAAC,KAAA,CAAAC,UAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACAf,OAAA,CAAAC,GAAA,yBAAAjB,OAAA;UACA,KAAAgC,QAAA,CAAAC,OAAA;UACA,KAAAC,MAAA;QACA;UACA,KAAAF,QAAA,CAAAG,KAAA;UACA;QACA;MACA;IACA;IACAD,OAAA;MACA,KAAAE,OAAA,CAAAb,IAAA;QAAA3B,IAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}